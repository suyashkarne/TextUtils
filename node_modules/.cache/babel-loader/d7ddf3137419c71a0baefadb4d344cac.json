{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\suyash.sunil.karne\\\\my-app\\\\src\\\\components\\\\TextForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n\n  const handleUpClick = () => {\n    let newText = text.toUpperCase();\n    setText(newText);\n    props.showAlert(\"Converted to uppercase\", \"success\");\n  };\n\n  const handleLcClick = () => {\n    let newText = text.toLowerCase();\n    setText(newText);\n    props.showAlert(\"Converted to lowercase\", \"success\");\n  };\n\n  const handleClearClick = () => {\n    let newText = '';\n    setText(newText);\n    props.showAlert(\"Text is cleared\", \"success\");\n  };\n\n  const handleInvertCase = () => {\n    let newText = '';\n\n    for (var i = 0; i < text.length; i++) {\n      if (text[i] === ' ') {\n        newText = newText + text[i];\n        continue;\n      }\n\n      if (text[i] >= 'a' && text[i] <= 'z') // Convert lowercase to uppercase\n        newText = newText + String.fromCharCode(text.charCodeAt(i) - 32);else if (text[i] >= 'A' && text[i] <= 'Z') // Convert uppercase to lowercase\n        newText = newText + String.fromCharCode(text.charCodeAt(i) + 32);\n    }\n\n    setText(newText);\n    props.showAlert(\"Inverted case\", \"success\");\n  };\n\n  const handleCopyText = () => {\n    let text = document.getElementById(\"exampleFormControlTextarea1\");\n    navigator.clipboard.writeText(text.value);\n    props.showAlert(\"Text is copied\", \"success\");\n  };\n\n  const handleExtraSpaces = () => {\n    let newText = text.split(/[ ]+/);\n    setText(newText.join(\" \"));\n    props.showAlert(\"Extra spaces are removed\", \"success\");\n  };\n\n  const handleOnChange = event => {\n    setText(event.target.value);\n  };\n\n  const [text, setText] = useState('');\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-group\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"exampleFormControlTextarea1\",\n      children: props.heading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"form-control\",\n      id: \"exampleFormControlTextarea1\",\n      rows: \"8\",\n      value: text,\n      onChange: handleOnChange,\n      style: {\n        backgroundColor: props.mode === 'dark' ? 'grey' : 'white',\n        color: props.mode === 'dark' ? 'white' : 'black'\n      },\n      placeholder: \"Enter your text here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-2\",\n        onClick: handleUpClick,\n        children: \"Convert to UpperCase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-2\",\n        onClick: handleLcClick,\n        children: \"Convert to LowerCase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-2\",\n        onClick: handleInvertCase,\n        children: \"Invert Case\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-2\",\n        onClick: handleClearClick,\n        children: \"Clear Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-2\",\n        onClick: handleCopyText,\n        children: \"Copy Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-2\",\n        onClick: handleExtraSpaces,\n        children: \"Remove Extra Spaces\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          color: props.mode === 'light' ? 'black' : 'white'\n        },\n        children: \"Your Text Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: props.mode === 'light' ? 'black' : 'white'\n        },\n        children: [text.split(' ').length - 1, \" words and \", text.length, \" characters\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: props.mode === 'light' ? 'black' : 'white'\n        },\n        children: [0.008 * text.split(\" \").length, \" minutes to read\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          color: props.mode === 'light' ? 'black' : 'white'\n        },\n        children: \"Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: props.mode === 'light' ? 'black' : 'white'\n        },\n        children: text.length > 0 ? text : \"Enter your text above to preview it here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TextForm, \"Kt/yo4ZcRlSRxcmAcKAou8CnBS0=\");\n\n_c = TextForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"sources":["C:/Users/suyash.sunil.karne/my-app/src/components/TextForm.js"],"names":["React","useState","TextForm","props","handleUpClick","newText","text","toUpperCase","setText","showAlert","handleLcClick","toLowerCase","handleClearClick","handleInvertCase","i","length","String","fromCharCode","charCodeAt","handleCopyText","document","getElementById","navigator","clipboard","writeText","value","handleExtraSpaces","split","join","handleOnChange","event","target","heading","backgroundColor","mode","color"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        let newText=text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to uppercase\",\"success\");\r\n\r\n    }\r\n    const handleLcClick = ()=>{\r\n        let newText=text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to lowercase\",\"success\");\r\n\r\n    }\r\n    const handleClearClick = ()=>{\r\n      let newText='';\r\n      setText(newText)\r\n      props.showAlert(\"Text is cleared\",\"success\");\r\n\r\n  }\r\n    const handleInvertCase=()=>{\r\n      let newText='';\r\n      for (var i = 0; i < text.length; i++)\r\n    {\r\n        if(text[i]===' ')\r\n        {\r\n        newText=newText+text[i];\r\n        continue;\r\n        }\r\n        if (text[i] >= 'a' && text[i] <= 'z')\r\n            // Convert lowercase to uppercase\r\n            newText=newText+String.fromCharCode(text.charCodeAt(i) - 32)            \r\n        else if (text[i] >= 'A' && text[i] <= 'Z')\r\n            // Convert uppercase to lowercase\r\n            newText=newText+String.fromCharCode(text.charCodeAt(i) + 32)          \r\n    }\r\n    setText(newText);\r\n    props.showAlert(\"Inverted case\",\"success\");\r\n\r\n    }\r\n    const handleCopyText=()=>{\r\n      let text=document.getElementById(\"exampleFormControlTextarea1\");\r\n      navigator.clipboard.writeText(text.value);\r\n      props.showAlert(\"Text is copied\",\"success\");\r\n\r\n    }\r\n    const handleExtraSpaces=()=>{\r\n      let newText=text.split(/[ ]+/);\r\n      setText(newText.join(\" \"));\r\n      props.showAlert(\"Extra spaces are removed\",\"success\");\r\n\r\n    }\r\n    const handleOnChange = (event)=>{\r\n        setText(event.target.value);\r\n    }\r\n    \r\n    const[text,setText]=useState('');\r\n    ;\r\n  return (\r\n    <div className=\"form-group\">\r\n    <label htmlFor=\"exampleFormControlTextarea1\">{props.heading}</label>\r\n    <br></br>\r\n    <br></br>\r\n    <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"8\" value={text} onChange={handleOnChange} style={{backgroundColor:props.mode==='dark'?'grey':'white',color:props.mode==='dark'?'white':'black'}} placeholder=\"Enter your text here\" ></textarea>\r\n    <br></br>\r\n    <div className='container'>\r\n    <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to UpperCase</button> \r\n    <button className=\"btn btn-primary mx-2\" onClick={handleLcClick}>Convert to LowerCase</button>\r\n    <button className=\"btn btn-primary mx-2\" onClick={handleInvertCase}>Invert Case</button>\r\n    <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>Clear Text</button>\r\n    <button className=\"btn btn-primary mx-2\" onClick={handleCopyText}>Copy Text</button>\r\n    <button className=\"btn btn-primary mx-2\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n\r\n    </div>\r\n    <div className='container my-4'>\r\n      <h2 style={{color:props.mode==='light'?'black':'white'}}>Your Text Summary</h2>\r\n      <p style={{color:props.mode==='light'?'black':'white'}}>{text.split(' ').length-1} words and {text.length} characters</p>\r\n      <p style={{color:props.mode==='light'?'black':'white'}}>{0.008*text.split(\" \").length} minutes to read</p>\r\n      <h2 style={{color:props.mode==='light'?'black':'white'}}>Preview</h2>\r\n      <p style={{color:props.mode==='light'?'black':'white'}}>{text.length>0?text:\"Enter your text above to preview it here\"}</p>\r\n    </div>\r\n  </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}