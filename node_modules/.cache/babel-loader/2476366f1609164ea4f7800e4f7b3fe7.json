{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\suyash.sunil.karne\\\\my-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const [toggle, setToggle] = useState('off');\n  const [greentoggle, setGreenToggle] = useState('off');\n\n  const greenToggleMode = () => {\n    if (mode === 'light') {\n      setMode('green');\n      setGreenToggle('on');\n      document.body.style.backgroundColor = '#1c6a53';\n      showAlert(\"Dark mode is enabled\", \"success\");\n    } else {\n      setMode('light');\n      setGreenToggle('off');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode is enabled\", \"success\");\n    }\n  };\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      setToggle('on');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode is enabled\", \"success\");\n    } else {\n      setMode('light');\n      setToggle('off');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode is enabled\", \"success\");\n    }\n  };\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Router, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"TextUtils\",\n      aboutText: \"About Us\",\n      mode: mode,\n      toggle: toggle,\n      greentoggle: greentoggle,\n      toggleMode: toggleMode,\n      greenToggleMode: greenToggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          color: mode === 'light' ? 'black' : 'white'\n        },\n        children: \"Enter your text to analyze\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"Qx39nC4B8V706jMW2UIOnn7fAhs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/suyash.sunil.karne/my-app/src/App.js"],"names":["useState","BrowserRouter","Router","Switch","Route","Link","About","Navbar","TextForm","Alert","App","mode","setMode","alert","setAlert","toggle","setToggle","greentoggle","setGreenToggle","greenToggleMode","document","body","style","backgroundColor","showAlert","toggleMode","message","type","msg","setTimeout","color"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\n\nfunction App() {\n  const[mode,setMode]=useState('light');\n  const [alert, setAlert] = useState(null);\n  const [toggle,setToggle]=useState('off')\n  const [greentoggle,setGreenToggle]=useState('off')\n\n  const greenToggleMode=()=>{\n    if(mode==='light')\n    {\n      setMode('green');\n      setGreenToggle('on');\n      document.body.style.backgroundColor='#1c6a53';\n      showAlert(\"Dark mode is enabled\",\"success\");\n    }\n    else\n    {\n    setMode('light');\n    setGreenToggle('off')\n    document.body.style.backgroundColor='white';\n    showAlert(\"Light mode is enabled\",\"success\");\n    }\n  }  \n\n  const toggleMode=()=>{\n    if(mode==='light')\n    {\n      setMode('dark');\n      setToggle('on');\n      document.body.style.backgroundColor='#042743';\n      showAlert(\"Dark mode is enabled\",\"success\");\n    }\n    else\n    {\n    setMode('light');\n    setToggle('off');\n    document.body.style.backgroundColor='white';\n    showAlert(\"Light mode is enabled\",\"success\");\n    }\n  }\n\n  \n\n  const showAlert=(message,type)=>{\n      setAlert({msg:message,\n      type:type})\n      setTimeout(() => {\n        setAlert(null)\n      }, 2000);\n  }\n  return (\n    \n    <>\n    <Router></Router>\n    <Navbar title=\"TextUtils\" aboutText=\"About Us\"  mode={mode} toggle={toggle} greentoggle={greentoggle} toggleMode={toggleMode} greenToggleMode={greenToggleMode}/>\n    <Alert alert={alert}/>\n    <div className='container my-3' >\n   \n      <h2 style={{color:mode==='light'?'black':'white'}}>Enter your text to analyze</h2>\n    <About></About>\n    </div>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}